# Cursor Rules  ## Instructions  - Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section. - Organize thoughts and plan steps before starting a task in the `Scratchpad` section. - Clear old tasks if necessary. - Use todo markers for progress tracking:   - `[X]` Completed tasks   - `[ ]` Pending tasks - Update Scratchpad after completing subtasks. - Reflect and plan after milestones for better task management. - Always refer to Scratchpad before planning the next step.  ## Lessons  ## Scratchpad  ### 1. Project Setup and Configuration [ ]  - [x] Initialize Next.js 15 project with TypeScript - [x] Set up project structure and folders - [x] Configure ESLint and Prettier - [x] Install and configure dependencies:   - Shadcn UI components   - Lucide icons   - Zod for validation   - Zustand for state management   - Recharts for analytics   - Resend for emails   - Uploadthing for file uploads   - Prisma ORM   - PostgreSQL database   - NextAuth.js beta for authentication   - Stripe for payments  ### 2. Database and Authentication [ ]  - [ ] Set up PostgreSQL database - [ ] Configure Prisma schema:   - User model   - Product model   - Category model   - Order model   - Review model   - Cart model - [ ] Implement NextAuth.js authentication:   - Email/Password   - OAuth providers (Google, GitHub)   - JWT handling   - Protected routes  ### 3. Core Features - Customer Side [ ]  - [ ] Homepage:   - Featured products   - Categories navigation   - Search functionality   - Filters and sorting - [ ] Product pages:   - Product details   - Image gallery   - Reviews and ratings   - Related products - [ ] Shopping cart:   - Add/remove items   - Update quantities   - Cart persistence - [ ] Checkout process:   - Shipping information   - Payment integration (Stripe)   - Order confirmation - [ ] User dashboard:   - Order history   - Profile management   - Saved addresses   - Wishlist  ### 4. Admin Dashboard [ ]  - [ ] Admin authentication and authorization - [ ] Dashboard overview:   - Sales analytics   - Recent orders   - Low stock alerts   - Revenue charts (Recharts) - [ ] Product management:   - CRUD operations   - Bulk actions   - Image upload (Uploadthing) - [ ] Order management:   - Order processing   - Status updates   - Refund handling - [ ] User management:   - Customer list   - Admin privileges   - User actions  ### 5. Advanced Features [ ]  - [ ] Real-time notifications - [ ] Email system (Resend):   - Order confirmations   - Shipping updates   - Password reset - [ ] Search optimization - [ ] Performance optimization:   - Image optimization   - Caching strategies   - API optimization - [ ] Analytics and reporting  ### 6. Testing and Deployment [ ]  - [ ] Unit testing - [ ] Integration testing - [ ] E2E testing - [ ] Security audit - [ ] Production deployment:   - Environment setup   - CI/CD pipeline   - Monitoring   - Backup strategy  ### 7. Documentation [ ]  - [ ] API documentation - [ ] User guide - [ ] Admin documentation - [ ] Deployment guide
â€ŽPROMPTS.mdCopy file name to clipboard+5Original file line numberDiff line numberDiff line change @@ -0,0 +1,5 @@ # PROMPTS  ## Prompt 1  Create development steps in `Scratchpad` of `.cursorrules` to create an ecommerce website with admin dashboard like amazon using TypeScript, Next.js 15, Shadcn, Lucide, Zod, Zustand, Recharts, Resend, Uploadthing, Prisma, PostgreSQL, next-auth@beta, Stripe.